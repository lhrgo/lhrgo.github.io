<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>稀疏数组</title>
      <link href="2021/01/24/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"/>
      <url>2021/01/24/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><blockquote><p>所谓稀疏数组就是数组中大部分的内容值都未被使用（或都为零），在数组中仅有少部分的空间使用。因此造成内存空间的浪费，为了节省内存空间，并且不影响数组中原有的内容值，我们可以采用一种压缩的方式来表示稀疏数组的内容。  </p></blockquote><p>简单来说，稀疏数组就是将数组中有值的部分记录下来，<strong>从而节约内存空间。</strong></p><p>到底什么地方需要用到稀疏数组呢，五子棋，扫雷等等这些典型可以应用稀疏数组来完成。<br>例如一个矩阵：</p><p>$<br>\begin{bmatrix}<br>  0&amp;  0&amp;  0&amp; 0 &amp;0 \\<br>  0&amp;  0&amp;  1&amp;  0&amp;0 \\<br>  0&amp;  0&amp;  0&amp;  2&amp;0 \\<br>  0&amp;  3&amp;  0&amp;  0&amp; 0\\<br>  0&amp;  0&amp;  0&amp;  0&amp;0<br>\end{bmatrix}<br>$</p><p>我们看到这个矩阵，显然它的0元素太多了，我们应该把该矩阵压缩成一个更小的矩阵，只保留有效的数字。<em>一般我们压缩为为n行3列的矩阵</em>。<br>压缩后的矩阵：  </p><table><thead><tr><th align="center"></th><th align="center">行</th><th align="center">列</th><th align="center">值</th></tr></thead><tbody><tr><td align="center">[0]</td><td align="center">5</td><td align="center">5</td><td align="center">3</td></tr><tr><td align="center">[1]</td><td align="center">1</td><td align="center">2</td><td align="center">1</td></tr><tr><td align="center">[2]</td><td align="center">2</td><td align="center">3</td><td align="center">2</td></tr><tr><td align="center">[3]</td><td align="center">3</td><td align="center">1</td><td align="center">3</td></tr></tbody></table><p>$<br>\begin{bmatrix}<br>  5&amp;  5&amp; 3\\<br>  1&amp;  2&amp; 1\\<br>  2&amp;  3&amp; 2\\<br>  3&amp;  1&amp; 3<br>\end{bmatrix}<br>$</p><ul><li>第一行：原始矩阵有几行几列，有几个有效值。   </li><li>第n行：原始矩阵对应的有效值所在的行和列。  </li><li>不难看出，原始矩阵本来有5$\times$5=25个元素，压缩后只剩4$\times$3=12个元素。</li></ul><p>代码实现如下：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建一个原始的二维数组11*11</span><span class="token comment" spellcheck="true">//0:没有棋子;1:黑子;2:蓝子</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chessArr1 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  chessArr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>  chessArr1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>  chessArr1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"原始的二维数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row <span class="token operator">:</span> chessArr1<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data <span class="token operator">:</span> row<span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>data<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><p><img src="/2021/01/24/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/1.png"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//记录有几个有效数字</span>  <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                sum<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//创建稀疏数组</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sparseArr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  sparseArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>  sparseArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>  sparseArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>sum<span class="token punctuation">;</span>  <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录第几个非0数据</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               count<span class="token operator">++</span><span class="token punctuation">;</span>               sparseArr1<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>               sparseArr1<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>j<span class="token punctuation">;</span>               sparseArr1<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"稀疏数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row <span class="token operator">:</span> sparseArr1<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data <span class="token operator">:</span> row<span class="token punctuation">)</span><span class="token punctuation">{</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>data<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><p><img src="/2021/01/24/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/2.png"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//将稀疏数组变回原始数组</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chessArr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>sparseArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sparseArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>sparseArr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        chessArr2<span class="token punctuation">[</span>sparseArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sparseArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>sparseArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"变回原始数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr<span class="token operator">:</span>chessArr2<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token operator">:</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>data<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云啊云？？</title>
      <link href="2021/01/24/foreign/"/>
      <url>2021/01/24/foreign/</url>
      
        <content type="html"><![CDATA[<p>今天是IT中云计算技术的时代行业。基于Internet的云计算具有最强大的计算体系结构。它<br>估计集成和网络化的编译硬件，软件和互联网基础设施。云计算是按需计算服务的交付从应用程序到存储和处理能力，通常通过互联网。而不是拥有它们的计算基础架构或数据中心，公司可以租用从应用程序到从云服务存储的任何内容提供者。一种使用云计算服务的好处是可以避免的前期成本和复杂性拥有并维护自己的IT基础架构，相反，只需支付使用时的使用费即可。在反过来，云计算服务的提供者可以从中受益通过交付相同的产品来实现重大的规模经济为广泛的客户[1]提供服务。</p><p>云计算是其中准备工作的新领域<br>资源在多种环境中都可用，并且<br>切实禁止运动。在其元素的帐户上<br>和大修的要点是个人和从属关系<br>转向云。云组织<br>供应商给予美国经济的云管理部门<br>规模，引人入胜的访问权限。它的改进是<br>分散的注册和流传的注册<br>用作翻译的不同范围[2]。<br>云组织供应商给了三个特别的<br>具有不同能力的组织<br>实例，IaaS（基础架构即服务），SaaS（软件<br>即服务即服务）以及PaaS（平台即服务）[3]。<br>SaaS：包含在提供商的程序上运行的编程<br>云基础上，通过（通过热情）传递给各个客户端<br>Internet上的小型客户端（例如程序）的方法。<br>常见的表示形式是Google的Google文档和<br>Salesforce.com。 PaaS：这些赋予了设计师多功能性<br>以便在供应商的阶段进行应用程序。一种<br>整合一个或更多服务器的虚拟化阶段，<br>工作结构，特定应用程序。重大的</p><p>组织受到限制，数据库和适应性有限。<br>普通情况是Google App Engine，Mosso和AWS：<br>S3。 IaaS：组织供应商具有设备和<br>是负责机舱，暂停和查看的。 的<br>客户通常按每次使用量支付费用。 IaaS<br>为客户提供适合资源访问的适应性<br>（框架组织，服务器和限制），<br>哪个可以<br>可以通过方法来获得组织API。 典型</p><p>表示形式是Flexi规模，AWS：EC2（Amazon Web<br>服务）[4]。<br>图1展示了已分发的注册<br>各种云客户进入的环境<br>云的组织，而云的组织<br>供应商也得到了明确的应用，<br>阶段和结构组织[5，6]。</p><p>云计算部署模型定义了以下类型<br>访问私有，公共，<br>社区和混合云。私有云：已交付<br>适用于单个联盟。可能受到以下情况的控制：<br>隶属关系或由组织的供应商提供。每个<br>为附属关系保留的利益。公开云：<br>适用于需要获得以下组织的每个人<br>分散的身分和隶属关系的人<br>服务器是云的所有者。 Google是以下之一<br>开放云的实例。社区云：因此<br>建议由一对夫妇共享一个云建立<br>特定聚会中的关系。有可能<br>由任何附属机构或同伴管理。正常<br>案例是开放式cirrus云计算测试平台，它是联合服务器的集合，横向培养了更多<br>从北美洲到亚洲的六个区域<br>混合云：混合循环注册以加入<br>其他游戏计划模型的组件也是如此。它包括一个<br>讨论了三种模型的任何两种（或全部）的混合<br>先前。 API的系统化导致了更少的应用<br>要求跨不同的云模型传输使用<br>[7]。<br>有一个分层的框架可以确保<br>安全性不适当的处理环境。这包括<br>如图2所示，分为四层。<br>云计算的重要问题是安全性。我们<br>将实现虚拟专用网络和防火墙以获取<br>机会从云中保护数据安全，因此我们使用云<br>客户联系数据可靠。</p><p>在第一层是安全的VM层。第二<br>层传递到库存层。该层有一个<br>合并资产的限制点<br>不同的云协会供应商积累了<br>巨大的虚拟库存框架。第四层是<br>虚拟系统屏幕层，该层既连接<br>虚拟机中的设备和编程方法<br>处理问题无论如何，很少有社交活动在起作用<br>并通过建立模型和雾霾的安全性来唤醒。的<br>云标准站点正在收集和策划数据<br>关于与云有关的度量标准的不同<br>社会事件。 CSA是其中之一。 CSA的ho积安排<br>供应商，非优惠对象和人员进行交谈<br>数据认证的当前和未来最佳实践<br>云[8]。</p><p>有针对云计算的特殊安全问题<br>在图3中显示为保险丝，各种先进的计算方式<br>虚拟化，数据安全性，身份，隐私，位置<br>隐私，数据隐私，移动设备安全性，移动<br>云应用程序安全性，分区和分载<br>安全。例如，云中的安全性创建了<br>互连必须保证云中框架的安全。<br>必须安全地执行符合负载的计算。<br>虚拟化的角度来看分散的注册结果<br>出于安全考虑[9]。例如离子控制<br>结合了数据编码并确保适合<br>数据共享的方法已获批准。资源资源<br>运输和记忆组织计算<br>安全。最后，数据挖掘技术可能对<br>雾中的恶意软件确认。</p><p>云客户可以完成招募工作<br>击败他们自己的特定物理空间。 提示<br>各种安全问题。 的云组织供应商<br>云保证客户端没有出现任何故障<br>问题，例如，数据丢失或数据盗窃。<br>合适的图形系统使用新的高级功能和<br>尚未调查的组织中<br>完全研究安全性。 有类似的<br>可信度高的客户可以入侵<br>通过模拟真正的蓝色客户来实现云计算<br>整个云 这会提示不同的客户<br>是共享的脏云。 安全问题已累积到<br>[10]在下面讨论了通过传送的处理。<br>可以利用两阶段方法来确保安全<br>分布式计算中的信息。 首先，<br>识别出该阶段，并进行传输和放置<br>恢复时识别第二个信息<br>来自云的信息 在第一阶段<br>包含放出的信息，分组，列表<br>构建，加密和消息验证代码[11，<br>12]。</p><h2 id="2。文献综述"><a href="#2。文献综述" class="headerlink" title="2。文献综述"></a>2。文献综述</h2><p>Krogstie探索的云计算正在完成<br>逐步达成令人满意的协议。包含<br>预期在本星期六很少使用云<br>时间，以及许多类似Google应用程序的信息，MSN<br>Envoy和Skype还有更多Flick。思想开始<br>1960年代，麦卡锡（McCarthy）考虑计算<br>实用程序[13]。 Murugesan与VPN相比比VPN更加安全<br>简单的拨号连接，但仍可以将网络连接到外部世界<br>需要额外的安全交易。然后再次移动Web 2.0<br>确保更直观和社区化的网络<br>员工的社交联系和汇总见解<br>展示了影响网络和拉动的新开门<br>在所有客户中更有效。承诺<br>快速拥抱Web 2.0，这是Web的下一阶段<br>发展[14]。斯莫林斯基根据他的说法<br>在连接到云的知名名称中<br>通过努力注册Salesforce<br>一个站点中的应用程序，具有其AWS和<br>亚马逊的多功能计算云，微软及其<br>著名的Windows Sky Blue，Google和少量的Google<br>的管理，例如Google文档<br>云计算具有令人难以置信的拉力和开放性。<br>桉树，开放星云和光环为主要代表<br>开放基础阶段，用于私密发送，以及杂种，<br>薄雾[15]。<br>Takagi改进了全面的云计算，美国<br>NIST的特征是：“云计算是<br>用于普遍授权，帮助，<br>坚持将系统入口设置为可配置的公用团队<br>确定资产（例如系统，服务器，应用程序，<br>库存和管理）<br>通过微不足道的准备和释放<br>行政管理或客户和行政管理<br>供应商合作。此模型可提高可访问性，<br>也应从5个关键属性中确定3个管理<br>模型，以及4种布置模型” [16]。描述了克鲁兹<br>客户端控制信息和应用程序通过<br>预先选择工作框架<br>有利于虚拟机的气氛。供应商<br>传达有关系统，能力和<br>服务器情况。原则重点是导演。安全<br>客户应关注的问题;云供应商<br>提供最轻微的安全义务。提供计算<br>诸如申请和行政部门等阶段的资产<br>可以生产和促进。在此层中，客户端<br>申请和管理时的踏板信息<br>具有联系以引入应用程序的VM。他<br>演示此层具有共同的安全性<br>供应商和客户之间的采购[17]。<br>Mell探索了NIST云计算的描述<br>表征了用于云计算的4种布置模型：<br>私人/个人，社区/团体，公共/开放和<br>杂种/杂种[18]。<br>鼓励使用Winkler内部的私有框架，<br>定期专用于一个附属机构。附加数据<br>可能需要在不同的工作场所之间进行隔离<br>屏蔽数据安全性。个人云可能会熔断<br>业务附件，公司工作环境，<br>员工，内部网客户/供应商。通常，一个个人<br>云在相邻内部利用虚拟化发展<br>服务器牧场。相互之间的云框架<br>关联是组云。它可以通过很少的几个来监督<br>关联，否则有一个局外人和安置地点。<br>客户端可能比普通个人具有更多的关联性<br>系统或通过VPN使用Internet [19]。西西斯<br>杂交云整合内部和外部雾<br>（公开，个人或小组）。 NIST表征杂种<br>云，而“安排”的数量超过一个，特别是<br>保留叙事元素的云框架<br>通过标准化或选择性的提前绑定在一起<br>可以实现数据和应用程序的传输能力（例如云）<br>影响雾之间的重量变化” [20]。<br>代表Modi，作为一部分的秘密密钥嗅探<br>用户寻求资源攻击以诚实联系客户<br>记录。结果，袭击者可能会滥用<br>特定目标的缺点，无法完成来源-<br>框架的级别入口，也可能是实质性的或隐含的。<br>可以从垫水洪水中利用来创建源导弹<br>形成源运作这可能会在仍然发生<br>通讯录中的通讯座已超载。在<br>这样一来，对袭击者的持续关注就是验证<br>程序以及要保存的组件。另外，<br>关键记录器，网络钓鱼攻击，脆弱的秘密密钥恢复<br>工作流程等并不广泛<br>基准。可能需要双重客户确认和生物特征<br>随着这项创新的发展而减少问题。沿<br>这些线在云中挑选源级别的入口<br>虚拟机或所有者可以由知道如何的攻击者获取<br>获取合法客户案例的入口。公共端口<br>分开的端口和关闭端口的记录可以从端口中删除<br>过滤。袭击者发现开放/公共端口和袭击<br>管理部门。防火墙规则，门户<br>筛选，切换，IP地址，MAC地址以及其他<br>系统链接的细微元素可以获取[21]。<br>分布式计算提出了三种组织模型<br>通过了哪些明确的组织<br>最终客户[22]。有不同的型号<br>明确的品质，适合不同<br>客户和业务目标。三种型号是<br>SaaS，PaaS和IaaS。这三种模型是SaaS，PaaS，<br>和IaaS，IaaS是所有云组织的基础，<br>基于PaaS并因此基于SaaS<br>它[23]。<br>在云计算中分离安全挑战之前，<br>我们需要了解协会和条件<br>这些云组织模型之间的关系[24]。 PaaS和<br>鼓励在IaaS之上使用SaaS;因此，任何<br>IaaS的破解将影响PaaS和Windows 10的安全性<br>此外，SaaS组织可能是合法的<br>备用方式无论如何，我们必须考虑到PaaS<br>提供一个阶段来生产和发送SaaS应用程序，其中<br>增进他们之间的安全性依存关系。作为<br>这些重要条件的后果，对任何事物的任何攻击<br>云组织层可以交换上层。<br>每个云组织模型都包含其特定的<br>商标安全性缺陷;不管他们像<br>方式分享影响其中每一个的一些麻烦。<br>云模型之间的这些关联和条件<br>而且可能是安全风险的源泉。 SaaS<br>供应商可能会从PaaS租用情况发生变化<br>供应商，还可以从一家<br>IaaS供应商。每个供应商都有责任确保自己的安全<br>特定的组织，可能会导致冲突的混合<br>安全模型。此外，它使其中的混乱<br>一旦发生攻击，组织供应商就会很谨慎。<br>库玛（Kumar）进行了一次包含雾的检查以及<br>云计算可能会支持其中的变化<br>研究人员。云计算技术立即成熟<br>以及作为许多开发工具在设计和开发中<br>实施云基础设施[25]。 Laghari出席了<br>解决方案以增强经验框架的标准<br>适用于云计算（QoC）的遵守情况<br>最终用户使用视频的体验标准（QoE）<br>云计算环境中的内容服务<br>[26、27和28]。<br>它提出了包含用户视觉感知的重新评估<br>他们遭受了通用视频质量扭曲的困扰<br>因为社交云的图像压缩和最终<br>可见的质量是在公平的情况下对twitter的允许，即<br>在包含MOS [29]的规模中指定。 Laghari出席了<br>达成协议以注册移动用户的QoE<br>通过移动应用程序和移动设备的云服务<br>没有足够的内部存储。多路组装<br>有偏见的消费者的QoE，因为他们可以访问微信<br>云服务如果用户不接受服务质量<br>从云服务供应商那里获得，然后他没有立即<br>责怪服务供应商有关服务水平的协议<br>（SLA）违反。结论是它极难<br>如果没有提供云服务提供商，则可以提高用户的QoE<br>一次知道终端用户的设备性能<br>获得对云功能的访问权限[30，31]。它探索了<br>在多个参数中进行整体云计算以进行验证和<br>规范最终用户的体验质量（QoE）<br>有关存储，速度，性能的限制<br>资源[32、33和34]。<br>它着重于支持k-NN查询的问题<br>加密安全云数据的所有者<br>不能与查询消费者和用户共享他的密钥<br>推荐使用另一种分辨率并带有多个键<br>详细解决关键共享问题[35]。<br>它提供并指出了关键的研究领域<br>独特的元素，即架构，数据加密<br>技术，访问控制机制和检测到<br>一些非凡的分析问题和未来的分析<br>提出建议以考虑采取行动以确保<br>智能健康解决方案中的万无一失的机密性[36]。它<br>推荐使用无交互的PPTR策略<br>依赖任何中间件PPTR开发了多项式<br>表达任务要求和工人利益的程序，<br>取出指定的关键字作为字典<br>降低计算单位成本它也验证了<br>全面的PPTR实用性<br>与MSDE，MuED和MRSE进行比较。通过<br>理论定性分析和实验研究<br>推荐的PPTR系统的性能优于其他<br>三种策略[37，38]。<br>Khan提出了增强物联网的解决方案<br>具有有限资源的安全性，而不是专注于安全性<br>完全有义务的设备的信息对应<br>网络和它们在道路设备中间的位置。<br>异常设备必须提供不确定的资产<br>此外，将无法帮助通用TLS / DTLS<br>安全通信约定[39]。</p><h2 id="3-Proposed-Methodology"><a href="#3-Proposed-Methodology" class="headerlink" title="3. Proposed Methodology"></a>3. Proposed Methodology</h2><p>成为仿真技术的强大工具<br>确定“现收现付”的最佳开始条件<br>程式。在某些情况下是公共云，这是电话<br>提供的虚拟机基础架构类型的数量是<br>在指定的时间实例化，该时间反映在<br>最终成本例如，为a开发新的提案<br>相关的各种（云计算主题）目的，提供<br>资源或数据中心管理），以及<br>投入工作和金钱来建立<br>测试集的适当大小，包括数据中心<br>是独立于各种公共云提供者或<br>组织。它可能出现在自动化工具中。去做<br>为此，将进行另一项绩效评估<br>非常困难。固有的可重复性如何<br>云中的可变性受到控制。因此，这是用于<br>研究复杂的场景，最简单的方法是最好的<br>模拟。<br>云计算网络模拟器CloudSim用于<br>使用三个参数对不同方案进行评估<br>（资源利用率，功耗和成本）进行判断<br>由以下人员提供的云计算服务的性能<br>云服务提供商（CSP）。</p><h3 id="3-1-CloudSim-Cloud-Computing-Simulator"><a href="#3-1-CloudSim-Cloud-Computing-Simulator" class="headerlink" title="3.1 CloudSim Cloud Computing Simulator."></a>3.1 CloudSim Cloud Computing Simulator.</h3><p>CloudSim模拟器界面位于<br>主要组件：云服务提供商，云用户，<br>和数据中心<br>CloudSim是在墨尔本大学发明的，<br>澳大利亚;研究人员在一个名为Cloud的项目上工作的地方<br>总线。 CloudSim在系统中的帮助以及云的行为<br>资源共享技术，虚拟机，云计算数据，云计算，云计算等计算环境<br>服务成本模型等CloudSim是强大的工具</p><p>协助研究人员在不了解内部的情况下进行工作<br>细节。将CloudSim启动到预先配置的配置<br>执行应用程序及其开放源代码功能<br>主要竞争优势与其他竞争优势的比较<br>商业网络模拟器。<br>CloudSim由四个组件组成，这些组件显示在</p><p>图5。<br>Figure 5. CloudSim Components</p><p>可以将安全系统的特征描述为一种过程或<br>旨在区分，保持或重新存储的小工具<br>来自安全攻击。像隐写术这样的安全系统<br>加密，散列等通常作为一部分使用<br>为框架提供安全性可以提供安全服务<br>作为处理或通信的区别<br>计划进行的管理以提高安全性<br>信息和物质的数据交换。这些<br>管理员可以帮助应对安全性攻击。安全<br>利益，作为一项规则，利用一个或多个安全系统来<br>完成目标</p><p>Figure 6. Security Mechanism Architecture</p><p>安全机制包括以下内容：</p><ul><li>客户端浏览器-它是来自<br>客户端可以访问云服务。</li><li>服务器-负责处理过程，包括<br>数据复制，密钥，存储，文件检索，文件<br>存储。 安全机制将是<br>在服务器端实现 用户详细信息将<br>由云管理和控制<br>管理员。</li><li>用户详细信息-它是一个包含详细信息的数据库<br>的注册用户。</li><li>这些数据库是其中的单个云<br>哪个数据被拆分成多个部分<br>不可读（即以加密形式）。<br>服务器将信息加密后，将根据信息将其分为多个部分<br>到这些中的云数量和存储数量<br>个人数据存储。 </li></ul><p>密码学可以分为两个类别。<br>SYMMETRIC密码学（加密）和<br>ASYMMETRIC密码学（加密）。 有<br>许多用于数据保护的非对称加密算法<br>以及可能在云中实现的安全性<br>DES，Triple-DES，AES，河豚等DES和<br>AES主要用于对称算法。</p><p>图7描述了用于云计算的加密<br>CSP的职责，该CSP负责部署数据存储。 用户<br>在将数据存储到云之前，必须对其进行加密<br>公司用户的机密性问题。</p><h3 id="3-2数据加密算法安全机制"><a href="#3-2数据加密算法安全机制" class="headerlink" title="3.2数据加密算法安全机制"></a>3.2数据加密算法安全机制</h3><h4 id="3-2-1-Rivest–Shamir–Adleman-Algorithm"><a href="#3-2-1-Rivest–Shamir–Adleman-Algorithm" class="headerlink" title="3.2.1 Rivest–Shamir–Adleman Algorithm"></a>3.2.1 Rivest–Shamir–Adleman Algorithm</h4><p>用于信息安全的RSA加密计算<br>云计算环境最重要<br>密钥加密系统。 它众所周知，广为人知<br>利用了开放密钥加密机制。 它适用于巨大<br>整数的数量及其大小，以1,024位为单位。 它是块<br>由于不对称性质而加密。 它仅在一轮加密。 当今的现代计算机使用RSA<br>加密云的数据安全性算法以进行加密<br>并解密数据。 由于不对称加密<br>加密算法，也称为公共密钥加密<br>机制。 它的机制是可以互换的<br>每个人和另一个密钥都必须私下保留。</p><h4 id="3-2-2-AES-Advanced-Encryption-Standard-Algorithm"><a href="#3-2-2-AES-Advanced-Encryption-Standard-Algorithm" class="headerlink" title="3.2.2    AES    (Advanced    Encryption    Standard)Algorithm"></a>3.2.2    AES    (Advanced    Encryption    Standard)Algorithm</h4><p>在2001年，NIST成功地迈出了一步<br>DES的发展（1997年）;它已选择了AES作为<br>替换DES和3DES。 AES由<br>文森特·里门（Vincent Rijmen），琼·达门（Joan Daaemen）。美国政府因其而使用<br>一个对称的分组密码，既保护又安全<br>敏感信息。可以同时使用两种软件<br>以及硬件。 AES使用三块密码或<br>四舍五入取决于其密钥版本，例如AES-128位<br>密钥，AES-192位密钥和AES-256位密钥。每个版本<br>AES的工作原理，用于加密和解密信息<br>使用128位加密密钥的消息<br>分别为128位和192位以及256位。<br>在本文中，比较并分析了两者<br>更好的密码技术和研究<br>在性能上要比其他人好。我们的比较基于<br>参数是加密执行时间，内存使用情况，密钥生成时间，文件上传时间和文件<br>下载时间。<br>最后，在云环境下我们列出了AES的性能比较和<br>RSA数据加密的一些原则。</p><h3 id="4-Results-Discussion"><a href="#4-Results-Discussion" class="headerlink" title="4. Results Discussion"></a>4. Results Discussion</h3><p>使用的文件大小从10 KB到200 KB不等<br>进行模拟。 我们尝试比较<br>两种加密算法的表示形式<br>以及RSA。 CloudSim工具用于进行实验。<br>使用AWS允许的密钥生成器<br>CloudSim。 CloudSim可以访问AWS。 图显示<br>用于执行的密钥生成器的快照128<br>位密钥用于模拟。数据加密的性能比较和分析<br>通过考虑对云计算中的算法进行评估<br>以下参数。</p><h4 id="4-1-Key-Generation-Time"><a href="#4-1-Key-Generation-Time" class="headerlink" title="4.1 Key Generation Time"></a>4.1 Key Generation Time</h4><p>密钥生成时间称为密钥生成时间<br>软件需要生成用于<br>加密。</p><p>在图9的上方给出了键的数量<br>从5升至10<br>垂直时间也从0秒升至6秒。</p><ul><li>小的平行四边形线代表RSA<br>算法。</li><li>显示AES算法的方线。</li></ul><p>加密密钥生成时间以秒为单位进行测量。 和键<br>是会员。 在AES的开始处，有0个密钥和0<br>次。 准确地说，在5个键处花费的时间为5秒。 在<br>密钥6和7，花费的时间是相同的4秒。 在关键8点<br>在3秒时下降，但在9键时又上升了4秒。<br>再次在键10处按下3秒。<br>在RSA的开始处，有0个密钥和0次。 5键<br>恰好花费了4.5秒的时间。 在关键6点<br>拍摄时间为4秒。 在关键7点进入关闭状态，在3秒时处于关键位置8<br>2秒 但是，关键9的时间再次上升了3秒。<br>再按10秒2秒。</p><h5 id="4-1-1-Comparison-of-Key-Generation-Time"><a href="#4-1-1-Comparison-of-Key-Generation-Time" class="headerlink" title="4.1.1 Comparison of Key Generation Time"></a>4.1.1 Comparison of Key Generation Time</h5><p>AES密钥生成时间和RSA密钥时间</p><h4 id="4-2加密执行时间"><a href="#4-2加密执行时间" class="headerlink" title="4.2加密执行时间"></a>4.2加密执行时间</h4><p>加密执行时间称为<br>加密算法用于加密纯文本以加密<br>文本。 这次计算加密的吞吐量<br>算法。<br>在下面的图10中，给出了文件大小<br>从50 kb升至200 kb<br>垂直时间从0开始也是递增的<br>毫秒至70毫秒</p><p>加密执行时间以kb / sec为单位。 在<br>从AES开始，文件大小为50 kb，执行时间为25<br>毫秒 当文件大小为60 KB时文件执行时间<br>上升45毫秒。 文件执行时间更改<br>AES中的极高或极低<br>文件大小。 或有时从30毫秒稍微增加到<br>33毫秒<br>在RSA的开始处，文件大小为50 KB和文件<br>执行时间为7毫秒。 当文件大小为60 KB时<br>执行时间几乎只有8毫秒。 所有变化<br>RSA中的值从7毫秒略微增加到11毫秒。</p>]]></content>
      
      
      <categories>
          
          <category> 云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>root密码忘了怎么办？</title>
      <link href="2021/01/21/root%E5%AF%86%E7%A0%81%E5%BF%98%E8%AE%B0%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
      <url>2021/01/21/root%E5%AF%86%E7%A0%81%E5%BF%98%E8%AE%B0%E6%80%8E%E4%B9%88%E5%8A%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="不会吧-不会吧-不会真有人连root密码都能忘吧？？"><a href="#不会吧-不会吧-不会真有人连root密码都能忘吧？？" class="headerlink" title="不会吧 不会吧 不会真有人连root密码都能忘吧？？"></a>不会吧 不会吧 不会真有人连root密码都能忘吧？？</h2><p>一顿操作猛如虎，敬请收看下周答。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib学习</title>
      <link href="2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h1><p>指将结构或非结构数据转换成适当的可视化图表，然后将隐藏在数据中的信息直接展现于人们面前。相比传统的用表格或文档展现数据的方式，可视化能将数据以更加直观的方式展现出来，使数据更加客观、更具说服力。<br>数据可视化已经被用于工作科研的方方面面，如工作报表、科研论文等，成为了不可或缺的基础技能。  </p><h2 id="初识Matplotlib"><a href="#初识Matplotlib" class="headerlink" title="初识Matplotlib"></a>初识Matplotlib</h2><ul><li>Matplotlib 是 Python 最著名的绘图库，它提供了一整套和 MATLAB 相似的命令 API，十分适合交互式地进行制图。</li><li>Matplotlib是一个Python 2D绘图库（使用Matplotlib发布的mpl_toolkits库可以画3D图形 ），能够以多种硬拷贝格式和跨平台的交互式环境生成出版物质量的图形，用来绘制各种静态，动态，交互式的图表。  </li></ul><h2 id="Matplotlib全貌"><a href="#Matplotlib全貌" class="headerlink" title="Matplotlib全貌"></a>Matplotlib全貌</h2><ul><li>Figure：顶层级，用来容纳所有绘图元素。  </li><li>Axes：matplotlib宇宙的核心，容纳了大量元素用来构造一幅幅子图，一个figure可以由一个或多个子图组成。  </li><li>Axis：axes的下属层级，用于处理所有和坐标轴，网格有关的元素。  </li><li>Tick：axis的下属层级，用来处理所有和刻度有关的元素。<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/1.png" alt="名词解释"></li></ul><p><strong>为了绘图，我们先导入两个模块</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</code></pre><h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><ul><li><p>通过x=np.linspace(-2,2,50)生成一个列表作为x，再设定一个y关于x的函数，用plt.plot(x,y),plt.show()即可。</p><pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">1</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#定义第一张figure,参数figsize=(a,b)，figsize用来设置图形的大小，a为图形的宽， b为图形的高</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_1.png"></p></li><li><p>对坐标轴范围的一些修改</p><pre class=" language-python"><code class="language-python">plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure__2.png"></p></li><li><p>重新定义坐标轴</p><pre class=" language-python"><code class="language-python">plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token punctuation">[</span>r<span class="token string">'$really\ bad$'</span><span class="token punctuation">,</span>r<span class="token string">'$bad$'</span><span class="token punctuation">,</span>r<span class="token string">'$normal$'</span><span class="token punctuation">,</span>r<span class="token string">'$good$'</span><span class="token punctuation">,</span>r<span class="token string">'$really\ good$'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_2.png"></p></li><li><p>利用plt.gca( )进行坐标轴的移动<br>figure图中黑色边界框线在Matplotlib中被称为spines，中文译为<em>脊柱</em>，或者叫做支柱，有<strong>四个</strong>，其中plt.gca()的gca就是get current axes（<em>获取当前坐标轴</em>）的意思。<br>将右部和顶部设置颜色为空</p><pre class=" language-python"><code class="language-python">ax<span class="token operator">=</span>plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_21.png"><br>在上面的基础上，加几行平移坐标轴x，y的代码</p><pre class=" language-python"><code class="language-python">ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'bottom'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#outward,axes</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_22.png">  </p></li></ul><h2 id="Legend图例"><a href="#Legend图例" class="headerlink" title="Legend图例"></a>Legend图例</h2><ul><li><p>给图做图例，只需要在plt.plot()加上label参数即可，然后执行plt.legend()即可</p><pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">1</span>y2<span class="token operator">=</span>x<span class="token operator">**</span><span class="token number">2</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'up'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'down'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_23.png"></p></li><li><p>对于legend()的参数，可以修改，handles=[l1,l2,],labels=[‘aaa’,’bbb’],loc=’best’，handles和labels一一对应（<strong>l1,和l2,都要加逗号</strong>），loc指图例的位置。</p><pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">1</span>y2<span class="token operator">=</span>x<span class="token operator">**</span><span class="token number">2</span>l1<span class="token punctuation">,</span><span class="token operator">=</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'up'</span><span class="token punctuation">)</span>l2<span class="token punctuation">,</span><span class="token operator">=</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'down'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>handles<span class="token operator">=</span><span class="token punctuation">[</span>l1<span class="token punctuation">,</span>l2<span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span>labels<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'aaa'</span><span class="token punctuation">,</span><span class="token string">'bbb'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>loc<span class="token operator">=</span><span class="token string">'best'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_24.png"></p></li></ul><h2 id="Annotation注解"><a href="#Annotation注解" class="headerlink" title="Annotation注解"></a>Annotation注解</h2><ul><li>plt.annotate()函数用于标注文字。<pre class=" language-python"><code class="language-python">plt<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xycoords<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code></pre>  <strong>参数：</strong>  <ol><li>s 为注释文本内容  </li><li>xy 为被注释的坐标点  </li><li>xycoords和textcoords可以指定数据点的坐标系和注释内容的坐标系</li><li>xytext 为注释文字的坐标位置  </li><li>arrowprops可以指定箭头的风格支持，输入一个字典  <pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">1</span>y2<span class="token operator">=</span>x<span class="token operator">**</span><span class="token number">2</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">)</span>ax<span class="token operator">=</span>plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'bottom'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#outward,axes</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#</span>x0<span class="token operator">=</span><span class="token number">1</span>y0<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x0<span class="token operator">+</span><span class="token number">1</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>y0<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#画一个点</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>x0<span class="token punctuation">,</span>x0<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>y0<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'r--'</span><span class="token punctuation">,</span>lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#画点(x0,y0)和点(x0,0)连成的一条线</span><span class="token comment" spellcheck="true">#method1</span>plt<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>r<span class="token string">'$2x+1=%s$'</span> <span class="token operator">%</span> y0<span class="token punctuation">,</span>xy<span class="token operator">=</span><span class="token punctuation">(</span>x0<span class="token punctuation">,</span>y0<span class="token punctuation">)</span><span class="token punctuation">,</span>xycoords<span class="token operator">=</span><span class="token string">'data'</span><span class="token punctuation">,</span>      xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>textcoords<span class="token operator">=</span><span class="token string">'data'</span><span class="token punctuation">,</span>      arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>arrowstyle<span class="token operator">=</span><span class="token string">"->"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#method2</span>plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span>r<span class="token string">'$\sigma_1\ \mu_2\ \alpha_3$'</span><span class="token punctuation">,</span>  fontdict<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'size'</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'r'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_25.png"></li></ol></li></ul><h2 id="tick能见度"><a href="#tick能见度" class="headerlink" title="tick能见度"></a>tick能见度</h2><pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">1</span>y2<span class="token operator">=</span>x<span class="token operator">**</span><span class="token number">2</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">)</span>ax<span class="token operator">=</span>plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'bottom'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#outward,axes</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> label <span class="token keyword">in</span> ax<span class="token punctuation">.</span>get_xticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>ax<span class="token punctuation">.</span>get_yticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    label<span class="token punctuation">.</span>set_fontsize<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>    label<span class="token punctuation">.</span>set_bbox<span class="token punctuation">(</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span>edgecolor<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">pass</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_26.png"></p><h2 id="Scatter散点图"><a href="#Scatter散点图" class="headerlink" title="Scatter散点图"></a>Scatter散点图</h2><ul><li>我们知道np.random.normal(loc=0.0, scale=1.0, size=None)的意思是一个正态分布，normal这里是正态的意思。 其中第一个参数为均值，第二个参数为标准差，第三个参数为输出的值的个数。<pre class=" language-python"><code class="language-python">n<span class="token operator">=</span><span class="token number">1024</span>X<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>Y<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>T<span class="token operator">=</span>np<span class="token punctuation">.</span>arctan2<span class="token punctuation">(</span>Y<span class="token punctuation">,</span>X<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#求反正切</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token number">75</span><span class="token punctuation">,</span>c<span class="token operator">=</span>T<span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#c=T用rgb颜色</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_27.png"></li></ul><h2 id="Bar柱状图"><a href="#Bar柱状图" class="headerlink" title="Bar柱状图"></a>Bar柱状图</h2><ul><li>numpy.random.uniform(low,high,size).功能：从一个均匀分布[low,high)中随机采样，注意定义域是左闭右开，即包含low，不包含high. size为个数 <pre class=" language-python"><code class="language-python">n<span class="token operator">=</span><span class="token number">12</span>X<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span>Y1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>X<span class="token operator">/</span>float<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>Y2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>X<span class="token operator">/</span>float<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#向上生成柱状图</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>X<span class="token punctuation">,</span><span class="token operator">-</span>Y2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#向下生成柱状图</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> zip<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y1<span class="token punctuation">)</span><span class="token punctuation">:</span>  plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">0.005</span><span class="token punctuation">,</span><span class="token string">'%.2f'</span><span class="token operator">%</span>y<span class="token punctuation">,</span>ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>va<span class="token operator">=</span><span class="token string">'bottom'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#ha：horizontal alignment，va：vertical alignment</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> zip<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y2<span class="token punctuation">)</span><span class="token punctuation">:</span>  plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">-</span>y<span class="token number">-0.005</span><span class="token punctuation">,</span><span class="token string">'%.2f'</span><span class="token operator">%</span>y<span class="token punctuation">,</span>ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>va<span class="token operator">=</span><span class="token string">'top'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_28.png"></li></ul><h2 id="Contours等高线图"><a href="#Contours等高线图" class="headerlink" title="Contours等高线图"></a>Contours等高线图</h2><ul><li>contourf()函数用于绘制轮廓,contour()用于绘制轮廓线<pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#计算高度的方法</span><span class="token keyword">def</span> <span class="token function">z</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>x<span class="token operator">**</span><span class="token number">5</span><span class="token operator">+</span>y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n<span class="token operator">=</span><span class="token number">256</span>x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>y<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>X<span class="token punctuation">,</span>Y<span class="token operator">=</span>np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#用plt.contourf()填充contours</span><span class="token comment" spellcheck="true">#8是等高线分为10部分,0是分为2部分</span>plt<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>z<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#color map</span>C<span class="token operator">=</span>plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>z<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span>colos<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>linewiths<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>C<span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>colors<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_29.png"></li></ul><h2 id="Image图片"><a href="#Image图片" class="headerlink" title="Image图片"></a>Image图片</h2><ul><li>imshow()接收一张图像，只是画出该图，并不会立刻显示出来。<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/2.png" alt="Interpolations for imshow"><pre class=" language-python"><code class="language-python">a<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#interpolation(插值方法，默认'nearest')</span><span class="token comment" spellcheck="true">#origin(坐标轴的样式，可选值为upper和lower)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>a<span class="token punctuation">,</span>interpolation<span class="token operator">=</span><span class="token string">'nearest'</span><span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">'bone'</span><span class="token punctuation">,</span>origin<span class="token operator">=</span><span class="token string">'upper'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#给图添加颜色渐变条</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_30.png"></li></ul><h2 id="3D数据"><a href="#3D数据" class="headerlink" title="3D数据"></a>3D数据</h2><ul><li>Matplotlib 也可以绘制 3D 图像，与二维图像不同的是，绘制三维图像主要通过 mplot3d 模块实现。但是，使用 Matplotlib 绘制三维图像实际上是在二维画布上展示，所以一般绘制三维图像时，同样需要载入 pyplot 模块。  </li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3Dfig<span class="token operator">=</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#生成窗口</span>ax<span class="token operator">=</span>Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#生成空间图</span>X<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">)</span>Y<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">)</span>X<span class="token punctuation">,</span>Y<span class="token operator">=</span>np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span>R<span class="token operator">=</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>X<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span>Y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>Z<span class="token operator">=</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#rstride：行跨,cstride：列跨</span>ax<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">,</span>rstride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>cstride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">'rainbow'</span><span class="token punctuation">,</span>edgecolors<span class="token operator">=</span><span class="token string">'k'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#画等高线图,zdir表示投到哪个平面，offset表示投到对应轴的数值</span>ax<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">,</span>zdir<span class="token operator">=</span><span class="token string">'z'</span><span class="token punctuation">,</span>offset<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">'rainbow'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_zlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_31.png"></p><h2 id="Subplot"><a href="#Subplot" class="headerlink" title="Subplot"></a>Subplot</h2><ol><li><p>方法1：</p><pre class=" language-python"><code class="language-python">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#2行1列，第一张图（按数字索引）</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#2行3列，第二张图</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#2行3列，第三张图</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#2行3列，第四张图</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_32.png"></p></li><li><p>方法2：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#设定3行3列，从第0行0列开始，列跨度为3，行跨度为1</span>ax1<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>rowspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设定3行3列，从第1行0列开始，列跨度为2，行跨度为1</span>ax2<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>rowspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设定3行3列，从第1行2列开始，列跨度为1，行跨度为2</span>ax3<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>rowspan<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设定3行3列，从第2行0列开始，列跨度为1，行跨度为1</span>ax4<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>rowspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设定3行3列，从第2行1列开始，列跨度为1，行跨度为1</span>ax5<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>rowspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_33.png"></p></li><li><p>方法3：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>gridspec <span class="token keyword">as</span> gridspecgs<span class="token operator">=</span>gridspec<span class="token punctuation">.</span>GridSpec<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>ax1<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax2<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax3<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax4<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax5<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_34.png"></p></li></ol><h2 id="次坐标轴"><a href="#次坐标轴" class="headerlink" title="次坐标轴"></a>次坐标轴</h2><ul><li>plt.subplots()<br>返回两个参数，第一个是figure图片对象，第二个是轴axes对象或者是轴对象组成的数组。<pre class=" language-python"><code class="language-python">x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token number">0.05</span><span class="token operator">*</span>x<span class="token operator">**</span><span class="token number">2</span>y2<span class="token operator">=</span><span class="token operator">-</span>y1fig<span class="token punctuation">,</span>ax1<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>ax2<span class="token operator">=</span>ax1<span class="token punctuation">.</span>twinx<span class="token punctuation">(</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span><span class="token string">'g-'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'b--'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">"X data"</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">"Y1"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">"Y2"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/13/Matplotlib%E5%AD%A6%E4%B9%A0/Figure_35.png"></li></ul><h2 id="Animation动画"><a href="#Animation动画" class="headerlink" title="Animation动画"></a>Animation动画</h2><ul><li><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> animationfig<span class="token punctuation">,</span>ax<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">)</span>line<span class="token punctuation">,</span><span class="token operator">=</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回列表</span><span class="token comment" spellcheck="true">#动画的核心是动画函数，你可以在其中定义视频的每一帧发生什么。这里的 i表示动画中帧的索引。 </span><span class="token keyword">def</span> <span class="token function">animate</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>  line<span class="token punctuation">.</span>set_ydata<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token operator">+</span>i<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> line<span class="token punctuation">,</span><span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  line<span class="token punctuation">.</span>set_ydata<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> line<span class="token punctuation">,</span>ani<span class="token operator">=</span>animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token operator">=</span>fig<span class="token punctuation">,</span>func<span class="token operator">=</span>animate<span class="token punctuation">,</span>frames<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>init_func<span class="token operator">=</span>init<span class="token punctuation">,</span>interval<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>blit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas学习</title>
      <link href="2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><p><strong>基本数据结构</strong><br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/18.png"></p><hr><h2 id="创建序列"><a href="#创建序列" class="headerlink" title="创建序列"></a>创建序列</h2><pre class=" language-python"><code class="language-python">s<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#创建pandas的序列</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>dates<span class="token operator">=</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">'20210101'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#日期的序列</span><span class="token keyword">print</span><span class="token punctuation">(</span>dates<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/3.png">  </p><hr><h2 id="创建DataFrame"><a href="#创建DataFrame" class="headerlink" title="创建DataFrame"></a>创建DataFrame</h2><p>在所有操作之前当然要先import必要的pandas库，因为pandas常与numpy一起配合使用，所以也一起import吧。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</code></pre><ol><li>可以直接使用pandas的DataFrame函数创建，比如接下来我们随机创建一个6*4的DataFrame。  </li></ol><pre class=" language-python"><code class="language-python">df<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index<span class="token operator">=</span>dates<span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#产生二维表</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/1.png"><br>2. <strong>也可以用字典创建。</strong></p><pre class=" language-python"><code class="language-python">dic1<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'狗蛋'</span><span class="token punctuation">,</span><span class="token string">'铁柱'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'gender'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>df3<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>dic1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df3<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/2.png"></p><ol start="3"><li><strong>查看数据类型</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>dtypes<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/4.png"> </li><li><strong>查看行、列标签</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#行标签</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#列标签</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/5.png"></li><li><strong>查看二维表的数据值，返回数组</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>values<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/6.png"></li><li><strong>对数据根据列进行描述性统计</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/7.png"></li><li><strong>将行列互换（转置）</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#这样也可以</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/8.png"></li><li><strong>排序</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#按列倒叙</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#按行倒叙</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#axis=0,,ascending=True,按第c列升序</span></code></pre></li></ol><p><em>运行结果：</em>  </p><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th></tr></thead><tbody><tr><td>2021-01-06</td><td>20</td><td>21</td><td>22</td><td>23</td></tr><tr><td>2021-01-05</td><td>16</td><td>17</td><td>18</td><td>19</td></tr><tr><td>2021-01-04</td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td>2021-01-03</td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td>2021-01-02</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td>2021-01-01</td><td>0</td><td>1</td><td>2</td><td>3</td></tr></tbody></table><table><thead><tr><th></th><th>d</th><th>c</th><th>b</th><th>a</th></tr></thead><tbody><tr><td>2021-01-01</td><td>3</td><td>2</td><td>1</td><td>0</td></tr><tr><td>2021-01-02</td><td>7</td><td>6</td><td>5</td><td>4</td></tr><tr><td>2021-01-03</td><td>11</td><td>10</td><td>9</td><td>8</td></tr><tr><td>2021-01-04</td><td>15</td><td>14</td><td>13</td><td>12</td></tr><tr><td>2021-01-05</td><td>19</td><td>18</td><td>17</td><td>16</td></tr><tr><td>2021-01-06</td><td>23</td><td>22</td><td>21</td><td>20</td></tr></tbody></table><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th></tr></thead><tbody><tr><td>2021-01-01</td><td>0</td><td>1</td><td>2</td><td>3</td></tr><tr><td>2021-01-02</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td>2021-01-03</td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td>2021-01-04</td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td>2021-01-05</td><td>16</td><td>17</td><td>18</td><td>19</td></tr><tr><td>2021-01-06</td><td>20</td><td>21</td><td>22</td><td>23</td></tr></tbody></table><hr><h2 id="筛选、修改数据"><a href="#筛选、修改数据" class="headerlink" title="筛选、修改数据"></a>筛选、修改数据</h2><ol><li><strong>可以按列，按行选取</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#或者print(df.a)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#选取第0行到第2行</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'20210103'</span><span class="token punctuation">:</span><span class="token string">'20210105'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/9.png"></li><li><strong>使用loc或者iloc查看数据值，区别是loc是根据标签（行名），iloc是根据数字索引（也就是行号）。</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20210101'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#筛选a，b两列</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#找第4行到第5行，第1列到第2列</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#选取第a列大于8的行</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/10.png"></li><li><strong>修改操作</strong><pre class=" language-python"><code class="language-python">df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">66</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20210101'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">22</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment" spellcheck="true">#或者df.a[df.a>8]=1</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/11.png"></li><li><strong>对数据处理时，需要判空，然后进行去除或者填充，代码如下：</strong><br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/12.png"></li></ol><hr><h2 id="文件的读取保存"><a href="#文件的读取保存" class="headerlink" title="文件的读取保存"></a>文件的读取保存</h2><ol><li>Pandas常用的有以下三种文件：</li></ol><ul><li>csv文件</li><li>txt文件</li><li>xls/xlsx文件</li></ul><ol start="2"><li>读取文件时的注意事项：</li></ol><ul><li>文件路径是否正确，相对路径 ./</li><li>编码方式 </li><li>分隔符</li><li>列名<pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#读取csv文件</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'student.csv'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取txt文件，直接读取可能会出现数据都挤在一列上</span>df_txt <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'student.txt'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取xls/xlsx文件</span>df_excel <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'student.xlsx'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_pickle<span class="token punctuation">(</span><span class="token string">'student.pickle'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#保存文件</span></code></pre></li></ul><hr><h2 id="数据合并"><a href="#数据合并" class="headerlink" title="数据合并"></a>数据合并</h2><ol><li><strong>pd.concat() 函数可以沿着指定的轴将多个 DataFrame 或者 Series 拼接到一起。</strong><pre class=" language-python"><code class="language-python">df11<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df22<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df33<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>res<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df11<span class="token punctuation">,</span>df22<span class="token punctuation">,</span>df33<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#ignore_index可以忽略标签</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#合并矩阵</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/13.png"></li><li><strong>pd.merge() 函数只能实现两个表的拼接。</strong><pre class=" language-python"><code class="language-python">df1<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df2<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>res1<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">]</span><span class="token punctuation">,</span>join<span class="token operator">=</span><span class="token string">'inner'</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#交集</span>res2<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">]</span><span class="token punctuation">,</span>join<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>sort<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#这里sort要改为True</span><span class="token keyword">print</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#并集</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/14.png">  </li></ol><pre class=" language-python"><code class="language-python">left<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'key'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'k0'</span><span class="token punctuation">,</span><span class="token string">'k1'</span><span class="token punctuation">,</span><span class="token string">'k2'</span><span class="token punctuation">,</span><span class="token string">'k3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                   <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'a0'</span><span class="token punctuation">,</span><span class="token string">'a1'</span><span class="token punctuation">,</span><span class="token string">'a2'</span><span class="token punctuation">,</span><span class="token string">'a3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                   <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'b0'</span><span class="token punctuation">,</span><span class="token string">'b1'</span><span class="token punctuation">,</span><span class="token string">'b2'</span><span class="token punctuation">,</span><span class="token string">'b3'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>right<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'key'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'k0'</span><span class="token punctuation">,</span><span class="token string">'k1'</span><span class="token punctuation">,</span><span class="token string">'k2'</span><span class="token punctuation">,</span><span class="token string">'k3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'c0'</span><span class="token punctuation">,</span><span class="token string">'c1'</span><span class="token punctuation">,</span><span class="token string">'c2'</span><span class="token punctuation">,</span><span class="token string">'c3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'d'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'d0'</span><span class="token punctuation">,</span><span class="token string">'d1'</span><span class="token punctuation">,</span><span class="token string">'d2'</span><span class="token punctuation">,</span><span class="token string">'d3'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>reslr<span class="token operator">=</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>reslr<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/15.png"></p><hr><h2 id="Pandas-plot-画图"><a href="#Pandas-plot-画图" class="headerlink" title="Pandas plot 画图"></a>Pandas plot 画图</h2><blockquote><p>首先要import matplotlib.pyplot as plt  </p></blockquote><ul><li><strong>绘制图</strong><pre class=" language-python"><code class="language-python">datad<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>datad<span class="token operator">=</span>datad<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>datad<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#默认5行</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/16.png"></li><li><strong>绘制散点图</strong><pre class=" language-python"><code class="language-python">ax<span class="token operator">=</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'DarkBlue'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'Class1'</span><span class="token punctuation">)</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'DarkGreen'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'Class2'</span><span class="token punctuation">,</span>ax<span class="token operator">=</span>ax<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/17.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numpy学习</title>
      <link href="2021/01/11/Numpy%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/11/Numpy%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><ul><li><strong>首先要安装numpy，这里我们下载了anaconda，便于调用,创建一个二维数组，类型为float</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nparray<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'维数：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'形状：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'元素个数：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>size<span class="token punctuation">)</span></code></pre><blockquote><p>[[1. 2. 3.]<br>[4. 5. 6.]]<br>维数： 2<br>形状： (2, 3)<br>元素个数： 6</p></blockquote><hr><ul><li><strong>生成空数组，每个元素趋近于0</strong><pre class=" language-python"><code class="language-python">e<span class="token operator">=</span>np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span></code></pre><blockquote><p>[[6.23042070e-307 3.56043053e-307 1.60219306e-306 7.56571288e-307]<br>[1.89146896e-307 1.37961302e-306 1.05699242e-307 8.01097889e-307]<br>[1.24610994e-306 1.37962456e-306 1.42410974e-306 1.20372323e+021]]</p></blockquote></li></ul><hr><ul><li><strong>生成零数组，每个元素为0</strong><pre class=" language-python"><code class="language-python">z<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span></code></pre><blockquote><p>[[0. 0. 0. 0.]<br>[0. 0. 0. 0.]<br>[0. 0. 0. 0.]]</p></blockquote></li></ul><hr><ul><li><strong>生成元素为1的数组</strong><pre class=" language-python"><code class="language-python">o<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span></code></pre><blockquote><p>[[1. 1. 1. 1.]<br>[1. 1. 1. 1.]<br>[1. 1. 1. 1.]]</p></blockquote></li></ul><hr><ul><li><strong>用np.arange()生成数组，reshape()表示重新定义数组形状</strong><pre class=" language-python"><code class="language-python">ar<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">)</span>arr<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><blockquote><p>[ 9 10 11 12 13 14 15 16 17 18]</p><p>[[0 1 2]<br>[3 4 5]<br>[6 7 8]]</p></blockquote></li></ul><hr><ul><li><strong>np.linspace()可以指定范围生成指定个数的数组</strong><pre class=" language-python"><code class="language-python">lins<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lins<span class="token punctuation">)</span>linsp<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>linsp<span class="token punctuation">)</span></code></pre><blockquote><p>[ 1.    3.25  5.5   7.75 10.  ]<br>[[ 1.   2.8  4.6]<br>[ 6.4  8.2 10. ]]</p></blockquote></li></ul><hr><ul><li><strong>矩阵运算(加减乘)</strong><pre class=" language-Python"><code class="language-Python">a=np.array([1,2,3,4]).reshape(2,2)b=np.arange(4).reshape(2,2)c=a+bd=a-be=a*b#对应数相乘print('a:{},b:{},+:{},-:{},*{}'.format(a,b,c,d,e))print(np.dot(a,b))#矩阵乘法</code></pre></li></ul><hr><ul><li><strong>对numpy进行三角函数运算and对axis维度的理解</strong>  </li></ul><p><strong><em>理解：若axis=i ,则numpy沿着第i个下标变化的方向进行操作</em></strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> math<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#1.0</span>random1<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>random1<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#沿着 列（cols） 的方向跨 行</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>random1<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#沿着 行（rows） 的方向跨 列</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><blockquote><p>1.0<br>[[0.36487089 0.97086575 0.740055   0.52626264]<br>[0.38152614 0.03620161 0.25908531 0.84605217]]</p><p>[2.60205428 1.52286523]</p><p>[0.74639703 1.00706736 0.99914031 1.37231481]  </p><p>0.03620161017618917  </p><p>0.9708657504267317</p></blockquote><hr><ul><li><strong>一些基本操作</strong><pre class=" language-python"><code class="language-python">A<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回最小值的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回最大值的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#平均值</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#平均值</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#中位数</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#类似前n项和</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#每两个做差</span></code></pre><blockquote><p>[[ 2  3  4  5]<br>[ 6  7  8  9]<br>[10 11 12 13]]<br>0<br>11<br>7.5<br>7.5<br>7.5<br>[ 2  5  9 14 20 27 35 44 54 65 77 90]<br>[[1 1 1]<br>[1 1 1]<br>[1 1 1]]</p></blockquote></li></ul><hr><pre class=" language-python"><code class="language-python">B<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回非零数的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#转置</span></code></pre><blockquote><p>[[0 1 2]<br> [3 4 5]<br> [6 7 8]]<br>(array([0, 0, 1, 1, 1, 2, 2, 2], dtype=int64), array([1, 2, 0, 1, 2, 0, 1, 2], dtype=int64))<br>[[0 3 6]<br> [1 4 7]<br> [2 5 8]]</p></blockquote><hr><pre class=" language-python"><code class="language-python">C<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#对每行排序,这里axis默认为1</span></code></pre><blockquote><p>[[1 2 3]<br> [7 8 9]<br> [3 4 5]]</p></blockquote><hr><pre class=" language-python"><code class="language-python">aa<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>aa<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#等量分割</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>array_split<span class="token punctuation">(</span>aa<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#不等量分割</span></code></pre><blockquote><p>[[ 0  1  2  3]<br> [ 4  5  6  7]<br> [ 8  9 10 11]]<br>[array([[0, 1],<br>       [4, 5],<br>       [8, 9]]), array([[ 2,  3],<br>       [ 6,  7],<br>       [10, 11]])]<br>[array([[0, 1],<br>       [4, 5],<br>       [8, 9]]), array([[ 2],<br>       [ 6],<br>       [10]]), array([[ 3],<br>       [ 7],<br>       [11]])]  </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown学习</title>
      <link href="2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown学习"><a href="#MarkDown学习" class="headerlink" title="MarkDown学习"></a>MarkDown学习</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> MarkDown学习 </span><span class="token title important"><span class="token punctuation">##</span> 二级标题  </span><span class="token title important"><span class="token punctuation">###</span> 三级标题  </span><span class="token title important"><span class="token punctuation">####</span> 四级标题  </span></code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><em>helloworld</em><br><strong>helloworld</strong><br><strong><em>helloworld</em></strong><br><del>helloworld</del>   </p><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>helloworld<span class="token punctuation">*</span></span>  <span class="token bold"><span class="token punctuation">**</span>helloworld<span class="token punctuation">**</span></span>  <span class="token bold"><span class="token punctuation">**</span>*helloworld<span class="token punctuation">**</span></span>*     ~~helloworld~~   </code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>studystudystudy  </p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> studystudystudy    </code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span><span class="token hr punctuation">***</span></code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="/2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/avatar.jpg" alt="hi"></p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![名称](图片地址)</span></code></pre><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://lhrgo.github.io/">花落的小屋</a></p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[名称](链接地址)</span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>a</li><li>b</li></ol><ul><li>aa</li><li>bb</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> a<span class="token list punctuation">2.</span> b<span class="token list punctuation">-</span> aa<span class="token list punctuation">-</span> bb</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>2000.10.10</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">| 名字 | 性别 | 生日       || ---- | ---- | ---------- || 张三 | 男   | 2000.10.10 |</code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class=" language-Java"><code class="language-Java">public void aaa(){    System.out.println(666);}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态博客Hexo搭建——本地and服务器</title>
      <link href="2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="静态博客–Hexo"><a href="#静态博客–Hexo" class="headerlink" title="静态博客–Hexo"></a>静态博客–Hexo</h2><p>静态博客：是指<strong>没有后端数据库</strong>的博客，所有文章都是以<strong>文件</strong>的形式存储，是一种<strong>纯前端的博客框架</strong>。  </p><h2 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h2><ul><li><p>电脑先装好git这个工具吧！<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" alt="装好后鼠标点右键">    </p></li><li><p>安装Node.js:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</code></pre></li><li><p>查看版本：</p><pre class=" language-bash"><code class="language-bash">hexo -v  </code></pre></li></ul><p>Node.js安装成功后，同时会自动安装一个包管理器，称为npm（Node Package Manager）。  </p><blockquote><p>什么是npm？<br>npm是一个包管理器，发布者将自己的代码发布（npm publish）到代码仓库（registry），使用者将自己需要的包写入package.json文件中，到代码仓库中把代码下载（npm install）下来。</p></blockquote><blockquote><p>由于npm代码仓库的服务器在国外，由于Great Firewall的缘故，下载速度可能不尽如人意，这时你可以使用淘宝的npm代码仓库，通过npm安装cnpm，</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org</code></pre><pre class=" language-bash"><code class="language-bash">安装成功后，可以通过以下命令查看cnpm版本​```  <span class="token function">bash</span>cnpm -v</code></pre><p>通过cnpm来操作下载速度会得到很大提升，但包的版本不一定是最新的。</p><h2 id="本地使用"><a href="#本地使用" class="headerlink" title="本地使用"></a>本地使用</h2><ol><li><p>创建目录<br>Hexo的所有文章都是以文件的形式存储在目录下的，所以首先需要新建一个目录，我的是blog，在此目录下操作。  </p></li><li><p>初始化博客  </p><blockquote><p><strong>hexo init</strong>  </p></blockquote></li><li><p>新建文章  </p><blockquote><p><strong>hexo new “BlogName”</strong> （BlogName是你的文章名称）会在source/_posts目录下生成BlogName.md文件，可以用typora、vscode等编辑器进行修改。  </p></blockquote></li><li><p>生成博客静态文件  </p><blockquote><p><strong>hexo g</strong>（g代表generate），生成博客<strong>静态文件</strong><br>每次修改文章后，都需要通过<strong>hexo clean</strong>清理一下，<br>然后通过<strong>hexo g</strong>重新生成，<br>最后也不要忘了通过<strong>hexo s</strong>重新启动Hexo。<br>要部署到github或者服务器记得<strong>hexo d</strong>。</p></blockquote></li><li><p>启动博客  </p><blockquote><p><strong>hexo s</strong>(s代表sever)</p></blockquote></li><li><p>更换主题<br>将需要更换的主题下载并解压缩到<strong>theme/yourThemeName</strong>目录下，yourThemeName是你给主题取的名字，如我用的主题是hexo-theme-matery，只需要解压缩到blog/themes/目录下即可,<br>当然你也可以直接在blog目录下执行git clone <a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a><br>解压完成后，修改_config.yaml文件中的theme属性，默认是landscape，修改为hexo-theme-matery</p></li><li><p>其他_config.yaml配置<br>_config.yaml文件是Hexo项目的全局配置文件，根据注释即可修改模板。</p><!-- ，常用的属性有：   --></li></ol><!-- ``` markdown# Site# 站点标题title: DragonBaby308's Blog# 站点副标题subtitle: Fighting for BAT!# 站点描述description: 记住迄今为止每一次失败时有心无力的感受，“为了更美好的明天而战”。# 作者author: DragonBaby308# 语言——  请注意，官方语言包不再支持简体中文zh-Hans，而是统一采用了zh-CNlanguage: zh-CN# 时区——默认是本地时区timezone:# URL# 站点地址url: http://106.14.153.30# 站点root，如果网站存在子目录中，url设置为'http://yoursite.com/child'，root设置为'/child/'root: /# 生成固定链接的格式permalink: :title/permalink_defaults:# Pagination# 每页文章数——关闭分页：0per_page: 10# Extensions# 主题theme: next# Deployment# 部署配置deploy:  type: git  repo: git@106.14.153.30:/usr/DragonBaby308/repo/blog.git  branch: master  ```   --><hr><p><strong>本来呢，就是想搭个博客，自己玩玩，没想到丙丙和阿里云合作送粉丝长达半年的服务器（莫名开心，啊哈哈哈），白嫖到服务器后，当初也不知道怎么玩，老小白了。经过一波了解，直接买了个域名，经过10天的备案后，终于可以访问我的网站了，开心!</strong>  </p><h2 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h2><p>国内的域名，根据工信部相关法法规是要备案的，不然这个域名不能使用。<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png"></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>备完案后，就开始解析你的域名吧！<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png"></p><h2 id="远程提交代码"><a href="#远程提交代码" class="headerlink" title="远程提交代码"></a>远程提交代码</h2><p>为了使本地可以跟远程的github建立联系,需要在本地配置SSH密钥，这样我们就可以在本地直接提交代码到 GitHub或者远端git仓库。   </p><ul><li>使用rsa加密</li></ul><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa</code></pre><ul><li>在目录C:\Users\86131.ssh找到id_rsa.pub这个文件，先复制里面的私钥。</li></ul><h2 id="用Git与本地建立连接"><a href="#用Git与本地建立连接" class="headerlink" title="用Git与本地建立连接"></a>用Git与本地建立连接</h2><ul><li><p>用远程连接工具连接阿里云服务器，这里我用Xshell6连接<br>看到Welcome to Alibaba…就成功啦。<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#阿里云安装git</span>yum <span class="token function">install</span> <span class="token function">git</span><span class="token comment" spellcheck="true">#装完可以查看git的版本</span><span class="token function">git</span> --version</code></pre><p><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png"></p></li><li><p>添加一个用户git,并修改他的权限</p><pre class=" language-bash"><code class="language-bash">adduser <span class="token function">git</span><span class="token function">chmod</span> 740 /etc/sudoers</code></pre></li><li><p>修改/etc/sudoers文件, 添上git    ALL=(ALL)     ALL</p><pre class=" language-bash"><code class="language-bash">vim /etc/sudoers</code></pre><p>如图：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png"></p></li><li><p>修改所有者只读的权限</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> 400 /etc/sudoers</code></pre></li><li><p>给git用户设置密码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> <span class="token function">git</span></code></pre></li><li><p>切换至 git 用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限</p><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> <span class="token function">git</span><span class="token function">mkdir</span>  ~/.sshvim  ~/.ssh/authorized_keys</code></pre><p>这里是要把刚刚复制的公钥复制到authorized_keys中。</p></li><li><p>赋予权限</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> 600 /home/git/.ssh/authorized_keys<span class="token function">chmod</span> 700 /home/git/.ssh</code></pre></li><li><p>打开主机的cmd终端，输入命令</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -v git@server<span class="token comment" spellcheck="true">#server是你的阿里云服务器的ip地址</span></code></pre><p><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png"><br>看到这里就说明主机可以连接服务器了。</p></li></ul><h2 id="配置Git钩子"><a href="#配置Git钩子" class="headerlink" title="配置Git钩子"></a>配置Git钩子</h2><blockquote><p>钩子(Hook)，是Windows消息处理机制的一个平台,应用程序可以在上面设置子程以监视指定窗口的某种消息，而且所监视的窗口可以是其他进程所创建的。当消息到达后，在目标窗口处理函数之前处理它。钩子机制允许应用程序截获处理window消息或特定事件。 </p></blockquote><ul><li><p>现在我们将阿里云用户切回root：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span><span class="token comment" spellcheck="true">#回车后，输入密码，再回车</span></code></pre></li><li><p>我们在/var建一个目录repo作为仓库的目录：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /var/repo</code></pre></li><li><p>改变repo目录的拥有者和权限：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/repo<span class="token function">chmod</span> -R 755 /var/repo</code></pre></li><li><p>在/var目录建一个跟目录hexo作为网站根目录：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /var/hexo</code></pre></li><li><p>改变repo目录的拥有者和权限：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/hexo<span class="token function">chmod</span> -R 755 /var/hexo</code></pre></li><li><p>切换到repo目录，创建git仓库</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /var/repo<span class="token function">git</span> init --bare hexo.git</code></pre></li><li><p>在刚刚生成的仓库/var/repo/hexo.git下，有一个自动生成的 hooks 文目录。我们需要在里边新建一个新的钩子文件 post-receive。</p><pre class=" language-bash"><code class="language-bash">vim /var/repo/hexo.git/hooks/post-receive</code></pre></li><li><p>在里面输入内容：</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/var/hexo --git-dir<span class="token operator">=</span>/var/repo/hexo.git checkout -f</code></pre></li><li><p>然后修改一下钩子文件的拥有者和权限就行了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/repo/hexo.git/hooks/post-receive<span class="token function">chmod</span> +x /var/repo/hexo.git/hooks/post-receive</code></pre></li></ul><h2 id="宝塔的使用"><a href="#宝塔的使用" class="headerlink" title="宝塔的使用"></a>宝塔的使用</h2><blockquote><p>bt是提升运维效率的服务器管理软件，支持一键LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA等多项服务器管理功能。  </p></blockquote><ul><li>安装和使用  </li></ul><ol><li>宝塔的官网：<a href="https://www.bt.cn/">宝塔面板</a>   </li><li>首先在你的阿里云服务器控制台，在防火墙开放8888这个端口，不然你的主机访问不了的哦。<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png"> </li><li>在阿里云服务器输入命令：  </li></ol><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> sh install.sh</code></pre><ol start="4"><li>安装完成后有网址、账号、密码：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png"></li></ol><p><strong>复制外网在浏览器打开。</strong><br><em>如果账号密码忘了怎么办呢？没关系，在命令行输入<strong>bt default</strong>又会出来啦。</em><br>进去后选择安装LNMP：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png"><br>5. 安装完点击网站添加站点：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png"><br>6. 然后点击设置：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/12.png"><br>7. 设置网站的目录：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png"><br>8. 修改server_name(你的网站域名)和root网站内容部署路径：<br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/14.png"><br>9. 重启宝塔，配置生效</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> bt restart</code></pre><p><strong>最后进入找到主机hexo文件夹找到_config.yml文件，在最后修改推送地址：</strong><br><img src="/2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0and%E6%9C%8D%E5%8A%A1%E5%99%A8/15.png">  </p><p><strong>然后就可以快乐的玩耍啦！！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
