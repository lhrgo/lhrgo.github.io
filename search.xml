<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pandas学习</title>
      <link href="2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><p><strong>基本数据结构</strong><br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/18.png"></p><hr><h2 id="创建序列"><a href="#创建序列" class="headerlink" title="创建序列"></a>创建序列</h2><pre class=" language-python"><code class="language-python">s<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#创建pandas的序列</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>dates<span class="token operator">=</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">'20210101'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#日期的序列</span><span class="token keyword">print</span><span class="token punctuation">(</span>dates<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/3.png">  </p><hr><h2 id="创建DataFrame"><a href="#创建DataFrame" class="headerlink" title="创建DataFrame"></a>创建DataFrame</h2><p>在所有操作之前当然要先import必要的pandas库，因为pandas常与numpy一起配合使用，所以也一起import吧。</p><pre class=" language-python"><code class="language-python">pip install pandas <span class="token keyword">as</span> pdpip install numpy <span class="token keyword">as</span> np</code></pre><ol><li>可以直接使用pandas的DataFrame函数创建，比如接下来我们随机创建一个6*4的DataFrame。  </li></ol><pre class=" language-python"><code class="language-python">df<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index<span class="token operator">=</span>dates<span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#产生二维表</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/1.png"><br>2. <strong>也可以用字典创建。</strong></p><pre class=" language-python"><code class="language-python">dic1<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'name':['小明','小红','狗蛋','铁柱'],'age':[17,20,5,40],'gender':['男','女','女','男']&amp;#125;</span>df3<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>dic1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df3<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/2.png"></p><ol start="3"><li><strong>查看数据类型</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>dtypes<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/4.png"> </li><li><strong>查看行、列标签</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#行标签</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#列标签</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/5.png"></li><li><strong>查看二维表的数据值，返回数组</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>values<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/6.png"></li><li><strong>对数据根据列进行描述性统计</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/7.png"></li><li><strong>将行列互换（转置）</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#这样也可以</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/8.png"></li><li><strong>排序</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#按列倒叙</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#按行倒叙</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#axis=0,,ascending=True,按第c列升序</span></code></pre></li></ol><p><em>运行结果：</em>  </p><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th></tr></thead><tbody><tr><td>2021-01-06</td><td>20</td><td>21</td><td>22</td><td>23</td></tr><tr><td>2021-01-05</td><td>16</td><td>17</td><td>18</td><td>19</td></tr><tr><td>2021-01-04</td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td>2021-01-03</td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td>2021-01-02</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td>2021-01-01</td><td>0</td><td>1</td><td>2</td><td>3</td></tr></tbody></table><table><thead><tr><th></th><th>d</th><th>c</th><th>b</th><th>a</th></tr></thead><tbody><tr><td>2021-01-01</td><td>3</td><td>2</td><td>1</td><td>0</td></tr><tr><td>2021-01-02</td><td>7</td><td>6</td><td>5</td><td>4</td></tr><tr><td>2021-01-03</td><td>11</td><td>10</td><td>9</td><td>8</td></tr><tr><td>2021-01-04</td><td>15</td><td>14</td><td>13</td><td>12</td></tr><tr><td>2021-01-05</td><td>19</td><td>18</td><td>17</td><td>16</td></tr><tr><td>2021-01-06</td><td>23</td><td>22</td><td>21</td><td>20</td></tr></tbody></table><table><thead><tr><th></th><th>a</th><th>b</th><th>c</th><th>d</th></tr></thead><tbody><tr><td>2021-01-01</td><td>0</td><td>1</td><td>2</td><td>3</td></tr><tr><td>2021-01-02</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td>2021-01-03</td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td>2021-01-04</td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td>2021-01-05</td><td>16</td><td>17</td><td>18</td><td>19</td></tr><tr><td>2021-01-06</td><td>20</td><td>21</td><td>22</td><td>23</td></tr></tbody></table><hr><h2 id="筛选、修改数据"><a href="#筛选、修改数据" class="headerlink" title="筛选、修改数据"></a>筛选、修改数据</h2><ol><li><strong>可以按列，按行选取</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#或者print(df.a)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#选取第0行到第2行</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'20210103'</span><span class="token punctuation">:</span><span class="token string">'20210105'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/9.png"></li><li><strong>使用loc或者iloc查看数据值，区别是loc是根据标签（行名），iloc是根据数字索引（也就是行号）。</strong><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20210101'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#筛选a，b两列</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#找第4行到第5行，第1列到第2列</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#选取第a列大于8的行</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/10.png"></li><li><strong>修改操作</strong><pre class=" language-python"><code class="language-python">df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">66</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20210101'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">22</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment" spellcheck="true">#或者df.a[df.a>8]=1</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/11.png"></li><li>**对数据处理时，需要判空，然后进行去除或者填充，代码如下：   **<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/12.png"></li></ol><hr><h2 id="文件的读取保存"><a href="#文件的读取保存" class="headerlink" title="文件的读取保存"></a>文件的读取保存</h2><ol><li>Pandas常用的有以下三种文件：</li></ol><ul><li>csv文件</li><li>txt文件</li><li>xls/xlsx文件</li></ul><ol start="2"><li>读取文件时的注意事项：</li></ol><ul><li>文件路径是否正确，相对路径 ./</li><li>编码方式 </li><li>分隔符</li><li>列名<pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#读取csv文件</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'student.csv'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取txt文件，直接读取可能会出现数据都挤在一列上</span>df_txt <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'student.txt'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取xls/xlsx文件</span>df_excel <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'student.xlsx'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_pickle<span class="token punctuation">(</span><span class="token string">'student.pickle'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#保存文件</span></code></pre></li></ul><hr><h2 id="数据合并"><a href="#数据合并" class="headerlink" title="数据合并"></a>数据合并</h2><ol><li><strong>pd.concat() 函数可以沿着指定的轴将多个 DataFrame 或者 Series 拼接到一起。</strong><pre class=" language-python"><code class="language-python">df11<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df22<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df33<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>res<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df11<span class="token punctuation">,</span>df22<span class="token punctuation">,</span>df33<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#ignore_index可以忽略标签</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#合并矩阵</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/13.png"></li><li><strong>pd.merge() 函数只能实现两个表的拼接。</strong><pre class=" language-python"><code class="language-python">df1<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df2<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>res1<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">]</span><span class="token punctuation">,</span>join<span class="token operator">=</span><span class="token string">'inner'</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#交集</span>res2<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">]</span><span class="token punctuation">,</span>join<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>sort<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#这里sort要改为True</span><span class="token keyword">print</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#并集</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/14.png">  </li></ol><pre class=" language-python"><code class="language-python">left<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'key':['k0','k1','k2','k3'],</span>                   <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'a0'</span><span class="token punctuation">,</span><span class="token string">'a1'</span><span class="token punctuation">,</span><span class="token string">'a2'</span><span class="token punctuation">,</span><span class="token string">'a3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                   <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'b0'</span><span class="token punctuation">,</span><span class="token string">'b1'</span><span class="token punctuation">,</span><span class="token string">'b2'</span><span class="token punctuation">,</span><span class="token string">'b3'</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span>right<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'key':['k0','k1','k2','k3'],</span>                    <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'c0'</span><span class="token punctuation">,</span><span class="token string">'c1'</span><span class="token punctuation">,</span><span class="token string">'c2'</span><span class="token punctuation">,</span><span class="token string">'c3'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'d'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'d0'</span><span class="token punctuation">,</span><span class="token string">'d1'</span><span class="token punctuation">,</span><span class="token string">'d2'</span><span class="token punctuation">,</span><span class="token string">'d3'</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span><span class="token keyword">print</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>reslr<span class="token operator">=</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>reslr<span class="token punctuation">)</span></code></pre><p>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/15.png"></p><hr><h2 id="Pandas-plot-画图"><a href="#Pandas-plot-画图" class="headerlink" title="Pandas plot 画图"></a>Pandas plot 画图</h2><blockquote><p>首先要import matplotlib.pyplot as plt  </p></blockquote><ul><li><strong>绘制图</strong><pre class=" language-python"><code class="language-python">datad<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>datad<span class="token operator">=</span>datad<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>datad<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#默认5行</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/16.png"></li><li><strong>绘制散点图</strong><pre class=" language-python"><code class="language-python">ax<span class="token operator">=</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'DarkBlue'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'Class1'</span><span class="token punctuation">)</span>datad<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'DarkGreen'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'Class2'</span><span class="token punctuation">,</span>ax<span class="token operator">=</span>ax<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>运行结果：<br><img src="/2021/01/12/Pandas%E5%AD%A6%E4%B9%A0/17.png"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Numpy学习</title>
      <link href="2021/01/11/Numpy%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/11/Numpy%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><ul><li><strong>首先要安装numpy，这里我们下载了anaconda，便于调用,创建一个二维数组，类型为float</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nparray<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'维数：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'形状：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'元素个数：'</span><span class="token punctuation">,</span>array<span class="token punctuation">.</span>size<span class="token punctuation">)</span></code></pre><blockquote><p>[[1. 2. 3.]<br>[4. 5. 6.]]<br>维数： 2<br>形状： (2, 3)<br>元素个数： 6</p></blockquote><hr><ul><li><strong>生成空数组，每个元素趋近于0</strong><pre class=" language-python"><code class="language-python">e<span class="token operator">=</span>np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span></code></pre><blockquote><p>[[6.23042070e-307 3.56043053e-307 1.60219306e-306 7.56571288e-307]<br>[1.89146896e-307 1.37961302e-306 1.05699242e-307 8.01097889e-307]<br>[1.24610994e-306 1.37962456e-306 1.42410974e-306 1.20372323e+021]]</p></blockquote></li></ul><hr><ul><li><strong>生成零数组，每个元素为0</strong><pre class=" language-python"><code class="language-python">z<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span></code></pre><blockquote><p>[[0. 0. 0. 0.]<br>[0. 0. 0. 0.]<br>[0. 0. 0. 0.]]</p></blockquote></li></ul><hr><ul><li><strong>生成元素为1的数组</strong><pre class=" language-python"><code class="language-python">o<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span></code></pre><blockquote><p>[[1. 1. 1. 1.]<br>[1. 1. 1. 1.]<br>[1. 1. 1. 1.]]</p></blockquote></li></ul><hr><ul><li><strong>用np.arange()生成数组，reshape()表示重新定义数组形状</strong><pre class=" language-python"><code class="language-python">ar<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">)</span>arr<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><blockquote><p>[ 9 10 11 12 13 14 15 16 17 18]</p><p>[[0 1 2]<br>[3 4 5]<br>[6 7 8]]</p></blockquote></li></ul><hr><ul><li><strong>np.linspace()可以指定范围生成指定个数的数组</strong><pre class=" language-python"><code class="language-python">lins<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lins<span class="token punctuation">)</span>linsp<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>linsp<span class="token punctuation">)</span></code></pre><blockquote><p>[ 1.    3.25  5.5   7.75 10.  ]<br>[[ 1.   2.8  4.6]<br>[ 6.4  8.2 10. ]]</p></blockquote></li></ul><hr><ul><li><strong>矩阵运算(加减乘)</strong><pre class=" language-Python"><code class="language-Python">a=np.array([1,2,3,4]).reshape(2,2)b=np.arange(4).reshape(2,2)c=a+bd=a-be=a*b#对应数相乘print('a:&#123;&#125;,b:&#123;&#125;,+:&#123;&#125;,-:&#123;&#125;,*&#123;&#125;'.format(a,b,c,d,e))print(np.dot(a,b))#矩阵乘法</code></pre></li></ul><hr><ul><li><strong>对numpy进行三角函数运算and对axis维度的理解</strong>  </li></ul><p><strong><em>理解：若axis=i ,则numpy沿着第i个下标变化的方向进行操作</em></strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> math<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#1.0</span>random1<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>random1<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#沿着 列（cols） 的方向跨 行</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>random1<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#沿着 行（rows） 的方向跨 列</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>random1<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><blockquote><p>1.0<br>[[0.36487089 0.97086575 0.740055   0.52626264]<br>[0.38152614 0.03620161 0.25908531 0.84605217]]</p><p>[2.60205428 1.52286523]</p><p>[0.74639703 1.00706736 0.99914031 1.37231481]  </p><p>0.03620161017618917  </p><p>0.9708657504267317</p></blockquote><hr><ul><li><strong>一些基本操作</strong><pre class=" language-python"><code class="language-python">A<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回最小值的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回最大值的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#平均值</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#平均值</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#中位数</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#类似前n项和</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#每两个做差</span></code></pre><blockquote><p>[[ 2  3  4  5]<br>[ 6  7  8  9]<br>[10 11 12 13]]<br>0<br>11<br>7.5<br>7.5<br>7.5<br>[ 2  5  9 14 20 27 35 44 54 65 77 90]<br>[[1 1 1]<br>[1 1 1]<br>[1 1 1]]</p></blockquote></li></ul><hr><pre class=" language-python"><code class="language-python">B<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回非零数的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#转置</span></code></pre><blockquote><p>[[0 1 2]<br> [3 4 5]<br> [6 7 8]]<br>(array([0, 0, 1, 1, 1, 2, 2, 2], dtype=int64), array([1, 2, 0, 1, 2, 0, 1, 2], dtype=int64))<br>[[0 3 6]<br> [1 4 7]<br> [2 5 8]]</p></blockquote><hr><pre class=" language-python"><code class="language-python">C<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#对每行排序,这里axis默认为1</span></code></pre><blockquote><p>[[1 2 3]<br> [7 8 9]<br> [3 4 5]]</p></blockquote><hr><pre class=" language-python"><code class="language-python">aa<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>aa<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#等量分割</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>array_split<span class="token punctuation">(</span>aa<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#不等量分割</span></code></pre><blockquote><p>[[ 0  1  2  3]<br> [ 4  5  6  7]<br> [ 8  9 10 11]]<br>[array([[0, 1],<br>       [4, 5],<br>       [8, 9]]), array([[ 2,  3],<br>       [ 6,  7],<br>       [10, 11]])]<br>[array([[0, 1],<br>       [4, 5],<br>       [8, 9]]), array([[ 2],<br>       [ 6],<br>       [10]]), array([[ 3],<br>       [ 7],<br>       [11]])]  </p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown学习</title>
      <link href="2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown学习"><a href="#MarkDown学习" class="headerlink" title="MarkDown学习"></a>MarkDown学习</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> MarkDown学习 </span><span class="token title important"><span class="token punctuation">##</span> 二级标题  </span><span class="token title important"><span class="token punctuation">###</span> 三级标题  </span><span class="token title important"><span class="token punctuation">####</span> 四级标题  </span></code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><em>helloworld</em><br><strong>helloworld</strong><br><strong><em>helloworld</em></strong><br><del>helloworld</del>   </p><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>helloworld<span class="token punctuation">*</span></span>  <span class="token bold"><span class="token punctuation">**</span>helloworld<span class="token punctuation">**</span></span>  <span class="token bold"><span class="token punctuation">**</span>*helloworld<span class="token punctuation">**</span></span>*     ~~helloworld~~   </code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>studystudystudy  </p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> studystudystudy    </code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span><span class="token hr punctuation">***</span></code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="/2021/01/07/MarkDown%E5%AD%A6%E4%B9%A0/avatar.jpg" alt="hi"></p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![名称](图片地址)</span></code></pre><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://lhrgo.github.io/">花落的小屋</a></p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[名称](链接地址)</span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>a</li><li>b</li></ol><ul><li>aa</li><li>bb</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> a<span class="token list punctuation">2.</span> b<span class="token list punctuation">-</span> aa<span class="token list punctuation">-</span> bb</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>2000.10.10</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">| 名字 | 性别 | 生日       || ---- | ---- | ---------- || 张三 | 男   | 2000.10.10 |</code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class=" language-Java"><code class="language-Java">public void aaa()&#123;    System.out.println(666);&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>静态博客Hexo搭建 —— 本地、服务器两开花</title>
      <link href="2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%A4%E5%BC%80%E8%8A%B1/"/>
      <url>2021/01/06/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2Hexo%E6%90%AD%E5%BB%BA-%E2%80%94%E2%80%94-%E6%9C%AC%E5%9C%B0%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%A4%E5%BC%80%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="静态博客–Hexo"><a href="#静态博客–Hexo" class="headerlink" title="静态博客–Hexo"></a>静态博客–Hexo</h2><p>静态博客：是指<strong>没有后端数据库</strong>的博客，所有文章都是以<strong>文件</strong>的形式存储，是一种<strong>纯前端的博客框架</strong>。  </p><h3 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h3><p>Node.js安装成功后，同时会自动安装一个包管理器，称为npm（Node Package Manager）。  </p><blockquote><p> 什么是npm？<br>npm是一个包管理器，发布者将自己的代码发布（npm publish）到代码仓库（registry），使用者将自己需要的包写入package.json文件中，到代码仓库中把代码下载（npm install）下来。</p></blockquote><p>安装：npm install -g hexo-cli<br>查看版本：hexo -v（本人使用的Hexo版本为1.1.0）</p><blockquote><p>由于npm代码仓库的服务器在国外，由于Great Firewall的缘故，下载速度可能不尽如人意，这时你可以使用淘宝的npm代码仓库，通过npm安装cnpm：<br>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>安装成功后，可以通过以下命令查看cnpm版本：<br>cnpm -v<br>通过cnpm来操作下载速度会得到很大提升，但包的版本不一定是最新的。</p></blockquote><h3 id="本地使用"><a href="#本地使用" class="headerlink" title="本地使用"></a>本地使用</h3><ol><li>创建目录<br>Hexo的所有文章都是以文件的形式存储在目录下的，所以首先需要新建一个目录，我的是Hexo，在此目录下操作。</li><li>初始化博客<br>hexo init</li><li>新建文章<br>hexo new “BlogName”（BlogName是你的文章名称）<br>会在source/_posts目录下生成BlogName.md文件，可以vim或其他Markdown编辑器进行修改。</li><li>生成博客静态文件<br>hexo g（g代表generate），生成博客<strong>静态文件</strong><br>每次修改文章后，都需要通过hexo clean清理一下，<br>然后通过hexo g重新生成，<br>最后也不要忘了通过hexo s重新启动Hexo。</li><li>启动博客<br>hexo s(s代表sever)</li><li>更换主题<br>将需要更换的主题下载并解压缩到theme/yourThemeName目录下，yourThemeName是你给主题取的名字，如我用的主题是yilia，只需要解压缩到Hexo/themes/next目录下即可,<br>当然你也可以直接在Hexo目录下执行git clone <a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a><br>解压完成后，修改_config.yaml文件中的theme属性，默认是landscape，修改为hexo-theme-matery</li></ol><p><em>值得注意到是，每次修改主题后，都需要通过hexo clean清理一下，然后通过hexo g重新生成public文件，最后通过hexo s重新启动hexo。</em> </p><ol start="7"><li>其他_config.yaml配置<br>_config.yaml文件是Hexo项目的全局配置文件，根据注释即可修改模板。<!-- ，常用的属性有：   --></li></ol><!-- ``` markdown# Site# 站点标题title: DragonBaby308's Blog# 站点副标题subtitle: Fighting for BAT!# 站点描述description: 记住迄今为止每一次失败时有心无力的感受，“为了更美好的明天而战”。# 作者author: DragonBaby308# 语言——  请注意，官方语言包不再支持简体中文zh-Hans，而是统一采用了zh-CNlanguage: zh-CN# 时区——默认是本地时区timezone:# URL# 站点地址url: http://106.14.153.30# 站点root，如果网站存在子目录中，url设置为'http://yoursite.com/child'，root设置为'/child/'root: /# 生成固定链接的格式permalink: :title/permalink_defaults:# Pagination# 每页文章数——关闭分页：0per_page: 10# Extensions# 主题theme: next# Deployment# 部署配置deploy:  type: git  repo: git@106.14.153.30:/usr/DragonBaby308/repo/blog.git  branch: master  ```   -->]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
